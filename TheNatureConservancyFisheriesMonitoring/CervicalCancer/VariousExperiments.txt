-------------------------------------------------------------------------------------
128x128 RGB image, 1000 estimators, RandomForest, bootstrap=False
no-data augmentation, using additional images, class_weight=None
             precision    recall  f1-score   support

          0       0.91      0.46      0.61       147
          1       0.66      0.93      0.77       424
          2       0.75      0.46      0.57       250

avg / total       0.73      0.70      0.68       821
[ 0.109  0.668  0.223]

-------------------------------------------------------------------------------------
128x128 RGB image, 1000 estimators, RandomForest, bootstrap=True
no-data augmentation, using additional images, class_weight=None
             precision    recall  f1-score   support

          0       0.95      0.39      0.56       147
          1       0.63      0.92      0.75       424
          2       0.69      0.39      0.50       250

avg / total       0.71      0.67      0.64       821
[ 0.111  0.722  0.167]

-------------------------------------------------------------------------------------
128x128 RGB image, 1000 estimators, RandomForest, bootstrap=True
no-data augmentation, using additional images, class_weight=balanced
             precision    recall  f1-score   support

          0       0.91      0.41      0.57       147
          1       0.62      0.93      0.74       424
          2       0.73      0.33      0.46       250

avg / total       0.70      0.66      0.62       821
[ 0.152  0.619  0.229]

-------------------------------------------------------------------------------------
128x128 RGB image, 1000 estimators, RandomForest, bootstrap=False
no-data augmentation, using additional images, class_weight=balanced
             precision    recall  f1-score   support

          0       0.92      0.46      0.61       147
          1       0.63      0.93      0.75       424
          2       0.75      0.36      0.49       250

avg / total       0.72      0.67      0.65       821
[ 0.169  0.598  0.233]

---------------------------------------------------------------------------------------
RandomizedSearchCV took 341.59 seconds for 20 candidates parameter settings.
Model with rank: 1
Mean validation score: 0.596 (std: 0.003)
Parameters: {'criterion': 'entropy', 'max_features': 9, 'min_samples_split': 6, 'bootstrap': False, 'min_samples_leaf': 4, 'max_depth': None}

Model with rank: 2
Mean validation score: 0.596 (std: 0.010)
Parameters: {'criterion': 'gini', 'max_features': 6, 'min_samples_split': 6, 'bootstrap': False, 'min_samples_leaf': 3, 'max_depth': None}

Model with rank: 3
Mean validation score: 0.590 (std: 0.015)
Parameters: {'max_depth': None, 'max_features': 7, 'min_samples_split': 2, 'min_samples_leaf': 6, 'bootstrap': False, 'criterion': 'gini'}
---------------------------------------------------------------------------------------
128x128 RGB image, 1000 estimators, RandomForest, bootstrap=False
no-data augmentation, using additional images, class_weight=balanced,
max_features=9, min_samples_split=6, max_depth=None, min_samples_leaf=4
             precision    recall  f1-score   support

          0       0.95      0.36      0.52       147
          1       0.62      0.93      0.74       424
          2       0.71      0.36      0.47       250

avg / total       0.70      0.65      0.62       821
[ 0.1499381   0.64499762  0.20506429]

---------------------------------------------------------------------------------------
60x40 RGB image, 1000 estimators, RandomForest, bootstrap=False
no-data augmentation, using additional images, class_weight=None
             precision    recall  f1-score   support

          0       0.94      0.50      0.65       147
          1       0.66      0.92      0.77       424
          2       0.72      0.44      0.54       250

avg / total       0.73      0.70      0.68       821
[ 0.134  0.681  0.185]

---------------------------------------------------------------------------------------
60x40 RGB image, 1000 estimators, RandomForest, bootstrap=True
no-data augmentation, using additional images, class_weight=None
             precision    recall  f1-score   support

          0       0.94      0.40      0.56       147
          1       0.63      0.91      0.74       424
          2       0.69      0.39      0.50       250

avg / total       0.70      0.66      0.64       821
[ 0.1    0.708  0.192]

---------------------------------------------------------------------------------------
60x40 RGB image, 1000 estimators, RandomForest, bootstrap=True
no-data augmentation, using additional images, class_weight=balanced
             precision    recall  f1-score   support

          0       0.90      0.41      0.56       147
          1       0.61      0.92      0.74       424
          2       0.72      0.32      0.45       250

avg / total       0.69      0.65      0.62       821
[ 0.129  0.649  0.222]

---------------------------------------------------------------------------------------
60x40 RGB image, 1000 estimators, RandomForest, bootstrap=False
no-data augmentation, using additional images, class_weight=balanced
             precision    recall  f1-score   support

          0       0.92      0.47      0.62       147
          1       0.63      0.94      0.76       424
          2       0.78      0.37      0.50       250

avg / total       0.73      0.68      0.65       821
log-loss = 0.7198219405711266
[ 0.169  0.597  0.234]

---------------------------------------------------------------------------------------
60x40 RGB image, 2000 estimators, RandomForest, bootstrap=False
no-data augmentation, using additional images, class_weight=None
             precision    recall  f1-score   support

          0       0.91      0.46      0.61       147
          1       0.65      0.92      0.77       424
          2       0.72      0.42      0.53       250

avg / total       0.72      0.69      0.67       821
log-loss = 0.722
[ 0.1285  0.6675  0.204 ]

---------------------------------------------------------------------------------------
128x128 RGB image, 2000 estimators, RandomForest, bootstrap=False
no-data augmentation, using additional images, class_weight=None
             precision    recall  f1-score   support

          0       0.93      0.45      0.61       147
          1       0.66      0.92      0.77       424
          2       0.72      0.46      0.56       250

avg / total       0.73      0.69      0.67       821

log-loss = 0.727

---------------------------------------------------------------------------------------
128x128 RGB image, 2000 estimators, RandomForest, bootstrap=False
20 epoch-data augmentation with 256 batch size, 2 batches each epoch,
using additional images, class_weight=None
(256, 49152)
(17372, 49152)
batch = 1
(256, 49152)
(17628, 49152)
batch = 2
             precision    recall  f1-score   support

          0       0.64      0.17      0.27      1030
          1       0.57      0.89      0.69      3099
          2       0.57      0.25      0.34      1812

avg / total       0.58      0.57      0.51      5941

log-loss = 0.894

---------------------------------------------------------------------------------------
128x128 RGB image, 2000 estimators, RandomForest, bootstrap=False
10 epoch-data augmentation with 256 batch size, 2 batches each epoch,
samplewise_center=True, rotation_range=90, width_shift_range=0,
height_shift_range=0, shear_range=0, zoom_range=0
horizontal_flip=True, fill_mode='nearest'
using additional images, class_weight=None
(12508, 49152)
             precision    recall  f1-score   support

          0       0.94      0.41      0.58       147
          1       0.65      0.91      0.76       424
          2       0.66      0.43      0.52       250

avg / total       0.70      0.67      0.65       821

log-loss = 0.747

---------------------------------------------------------------------------------------
128x128 RGB image, 2000 estimators, RandomForest, bootstrap=False
20 epoch-data augmentation with 256 batch size, 2 batches each epoch,
samplewise_center=True, rotation_range=90, width_shift_range=0,
height_shift_range=0, shear_range=0, zoom_range=0
horizontal_flip=True, fill_mode='nearest'
using additional images, class_weight=None
(17628, 49152)
             precision    recall  f1-score   support

          0       0.90      0.45      0.60       147
          1       0.65      0.91      0.76       424
          2       0.68      0.43      0.52       250

avg / total       0.70      0.68      0.66       821

log-loss = 0.745

---------------------------------------------------------------------------------------
128x128 RGB image, 2000 estimators, RandomForest, bootstrap=False,
Normalized the image : norm='l2', axis='1'
10 epoch-data augmentation with 256 batch size, 2 batches each epoch,
samplewise_center=True, rotation_range=90, width_shift_range=0,
height_shift_range=0, shear_range=0, zoom_range=0
horizontal_flip=True, fill_mode='nearest'
using additional images, class_weight=None
(12508, 49152)
             precision    recall  f1-score   support

          0       0.86      0.44      0.58       147
          1       0.65      0.92      0.76       424
          2       0.72      0.42      0.53       250

avg / total       0.71      0.68      0.66       821

log-loss = 0.738

---------------------------------------------------------------------------------------
128x128 RGB image, 2000 estimators, RandomForest, bootstrap=False,
MinMaxScaler
10 epoch-data augmentation with 256 batch size, 2 batches each epoch,
samplewise_center=True, rotation_range=90, width_shift_range=0,
height_shift_range=0, shear_range=0, zoom_range=0
horizontal_flip=True, fill_mode='nearest'
using additional images, class_weight=None
(12508, 49152)
             precision    recall  f1-score   support

          0       0.91      0.46      0.61       147
          1       0.65      0.92      0.76       424
          2       0.70      0.43      0.53       250

avg / total       0.71      0.68      0.66       821

log-loss = 0.736

---------------------------------------------------------------------------------------
128x128 RGB image, 2000 estimators, RandomForest, bootstrap=False,
StandardScaler
10 epoch-data augmentation with 256 batch size, 2 batches each epoch,
samplewise_center=True, rotation_range=90, width_shift_range=0,
height_shift_range=0, shear_range=0, zoom_range=0
horizontal_flip=True, fill_mode='nearest'
using additional images, class_weight=None
(12508, 49152)
             precision    recall  f1-score   support

          0       0.89      0.45      0.60       147
          1       0.66      0.91      0.76       424
          2       0.69      0.45      0.54       250

avg / total       0.71      0.68      0.67       821

log-loss = 0.737

---------------------------------------------------------------------------------------
128x128 RGB image, CNN- 4Conv-1FC
1 epoch, 7388 batches per epoch, 32 batch size, no data augmentation, 
using additional images
             precision    recall  f1-score   support

          0       0.00      0.00      0.00       147
          1       0.55      0.85      0.67       424
          2       0.54      0.36      0.43       250

avg / total       0.45      0.55      0.47       821

log-loss = 1.004

---------------------------------------------------------------------------------------
128x128 RGB image, CNN- 4Conv-1FC
10 epoch, 7388 batches per epoch, 32 batch size, no data augmentation, 
using additional images
         precision    recall  f1-score   support

          0       0.69      0.22      0.34       147
          1       0.60      0.79      0.68       424
          2       0.54      0.48      0.51       250

avg / total       0.60      0.59      0.57       821

log-loss = 0.898

---------------------------------------------------------------------------------------
128x128 RGB image, CNN- 4Conv-1FC
10 epoch, 7388 batches per epoch, 32 batch size, data augmentation, 
featurewise_center=False, samplewise_center=False, featurewise_std_normalization=False,  
samplewise_std_normalization=False, zca_whitening=False, 
rotation_range=0, width_shift_range=0.1, height_shift_range=0.1,  
horizontal_flip=True, vertical_flip=False
using additional images
7388/7388 [==============================] - 1242s - loss: 0.9141 - acc: 0.5548 - val_loss: 0.9068 - val_acc: 0.5713
Epoch 2/10
7388/7388 [==============================] - 1238s - loss: 0.8637 - acc: 0.5861 - val_loss: 0.8904 - val_acc: 0.5847
Epoch 3/10
7388/7388 [==============================] - 1239s - loss: 0.8275 - acc: 0.6137 - val_loss: 0.8537 - val_acc: 0.6005
Epoch 4/10
7388/7388 [==============================] - 1239s - loss: 0.7961 - acc: 0.6368 - val_loss: 0.8346 - val_acc: 0.6273
Epoch 5/10
7388/7388 [==============================] - 1239s - loss: 0.7678 - acc: 0.6542 - val_loss: 0.8155 - val_acc: 0.6236
Epoch 6/10
7388/7388 [==============================] - 1239s - loss: 0.7493 - acc: 0.6657 - val_loss: 0.8324 - val_acc: 0.6309
Epoch 7/10
7388/7388 [==============================] - 1240s - loss: 0.7503 - acc: 0.6667 - val_loss: 0.8388 - val_acc: 0.6322
Epoch 8/10
7388/7388 [==============================] - 1239s - loss: 0.7784 - acc: 0.6503 - val_loss: 0.9109 - val_acc: 0.5798
Epoch 9/10
7388/7388 [==============================] - 1239s - loss: 0.8110 - acc: 0.6297 - val_loss: 0.9343 - val_acc: 0.5554
Epoch 10/10
7388/7388 [==============================] - 1239s - loss: 0.8454 - acc: 0.6102 - val_loss: 0.9597 - val_acc: 0.5140
             precision    recall  f1-score   support

          0       0.68      0.14      0.24       147
          1       0.57      0.65      0.61       424
          2       0.41      0.50      0.45       250

avg / total       0.54      0.51      0.49       821

log-loss = 0.960

---------------------------------------------------------------------------------------
128x128 RGB image, CNN- 4Conv-1FC
10 epoch, 7388 batches per epoch, 32 batch size, no data augmentation, 
using additional images
7388/7388 [==============================] - 45s - loss: 0.9911 - acc: 0.5256 - val_loss: 0.9702 - val_acc: 0.5384
Epoch 2/10
7388/7388 [==============================] - 42s - loss: 0.9381 - acc: 0.5464 - val_loss: 0.9426 - val_acc: 0.5347
Epoch 3/10
7388/7388 [==============================] - 42s - loss: 0.9174 - acc: 0.5490 - val_loss: 0.9668 - val_acc: 0.5396
Epoch 4/10
7388/7388 [==============================] - 42s - loss: 0.9000 - acc: 0.5615 - val_loss: 0.9347 - val_acc: 0.5591
Epoch 5/10
7388/7388 [==============================] - 42s - loss: 0.8845 - acc: 0.5754 - val_loss: 0.9314 - val_acc: 0.5396
Epoch 6/10
7388/7388 [==============================] - 42s - loss: 0.8704 - acc: 0.5836 - val_loss: 0.9333 - val_acc: 0.5542
Epoch 7/10
7388/7388 [==============================] - 42s - loss: 0.8514 - acc: 0.5920 - val_loss: 0.9050 - val_acc: 0.5847
Epoch 8/10
7388/7388 [==============================] - 42s - loss: 0.8304 - acc: 0.6107 - val_loss: 0.8946 - val_acc: 0.5761
Epoch 9/10
7388/7388 [==============================] - 42s - loss: 0.8131 - acc: 0.6224 - val_loss: 0.8950 - val_acc: 0.5834
Epoch 10/10
7388/7388 [==============================] - 42s - loss: 0.7931 - acc: 0.6359 - val_loss: 0.9009 - val_acc: 0.5834
             precision    recall  f1-score   support

          0       0.66      0.25      0.36       147
          1       0.59      0.85      0.69       424
          2       0.55      0.33      0.41       250

avg / total       0.59      0.58      0.55       821

log-loss = 0.901

---------------------------------------------------------------------------------------
128x128 RGB image, CNN- 4Conv-1FC
10 epoch, 7388 batches per epoch, 32 batch size, no data augmentation, 
early stopping (stops after 16th epoch),
optimizer = Adadelta(decay=1e-3), loss = categorical_crossentropy,
EarlyStopping(monitor='val_loss', min_delta=0, patience=1, verbose=1, mode='auto')]
using additional images

7388/7388 [==============================] - 49s - loss: 1.0091 - acc: 0.5264 - categorical_crossentropy: 1.0091 - val_loss: 1.0151 - val_acc: 0.5396 - val_categorical_crossentropy: 1.0151
Epoch 2/50
7388/7388 [==============================] - 46s - loss: 0.9596 - acc: 0.5387 - categorical_crossentropy: 0.9596 - val_loss: 0.9547 - val_acc: 0.5432 - val_categorical_crossentropy: 0.9547
Epoch 3/50
7388/7388 [==============================] - 47s - loss: 0.9295 - acc: 0.5499 - categorical_crossentropy: 0.9295 - val_loss: 0.9448 - val_acc: 0.5213 - val_categorical_crossentropy: 0.9448
Epoch 4/50
7388/7388 [==============================] - 46s - loss: 0.9081 - acc: 0.5554 - categorical_crossentropy: 0.9081 - val_loss: 0.9280 - val_acc: 0.5457 - val_categorical_crossentropy: 0.9280
Epoch 5/50
7388/7388 [==============================] - 46s - loss: 0.8907 - acc: 0.5697 - categorical_crossentropy: 0.8907 - val_loss: 0.9164 - val_acc: 0.5761 - val_categorical_crossentropy: 0.9164
Epoch 6/50
7388/7388 [==============================] - 46s - loss: 0.8686 - acc: 0.5804 - categorical_crossentropy: 0.8686 - val_loss: 0.9150 - val_acc: 0.5676 - val_categorical_crossentropy: 0.9150
Epoch 7/50
7388/7388 [==============================] - 46s - loss: 0.8445 - acc: 0.5927 - categorical_crossentropy: 0.8445 - val_loss: 0.8916 - val_acc: 0.5761 - val_categorical_crossentropy: 0.8916
Epoch 8/50
7388/7388 [==============================] - 46s - loss: 0.8165 - acc: 0.6214 - categorical_crossentropy: 0.8165 - val_loss: 0.8750 - val_acc: 0.5993 - val_categorical_crossentropy: 0.8750
Epoch 9/50
7388/7388 [==============================] - 46s - loss: 0.7842 - acc: 0.6370 - categorical_crossentropy: 0.7842 - val_loss: 0.8856 - val_acc: 0.5907 - val_categorical_crossentropy: 0.8856
Epoch 10/50
7388/7388 [==============================] - 46s - loss: 0.7502 - acc: 0.6601 - categorical_crossentropy: 0.7502 - val_loss: 0.8720 - val_acc: 0.6041 - val_categorical_crossentropy: 0.8720
Epoch 11/50
7388/7388 [==============================] - 46s - loss: 0.7124 - acc: 0.6830 - categorical_crossentropy: 0.7124 - val_loss: 0.8558 - val_acc: 0.5932 - val_categorical_crossentropy: 0.8558
Epoch 12/50
7388/7388 [==============================] - 46s - loss: 0.6758 - acc: 0.7047 - categorical_crossentropy: 0.6758 - val_loss: 0.8478 - val_acc: 0.6066 - val_categorical_crossentropy: 0.8478
Epoch 13/50
7388/7388 [==============================] - 46s - loss: 0.6328 - acc: 0.7306 - categorical_crossentropy: 0.6328 - val_loss: 0.8295 - val_acc: 0.6346 - val_categorical_crossentropy: 0.8295
Epoch 14/50
7388/7388 [==============================] - 46s - loss: 0.5970 - acc: 0.7484 - categorical_crossentropy: 0.5970 - val_loss: 0.8291 - val_acc: 0.6334 - val_categorical_crossentropy: 0.8291
Epoch 15/50
7388/7388 [==============================] - 46s - loss: 0.5513 - acc: 0.7730 - categorical_crossentropy: 0.5513 - val_loss: 0.8321 - val_acc: 0.6516 - val_categorical_crossentropy: 0.8321
Epoch 16/50
7388/7388 [==============================] - 46s - loss: 0.5077 - acc: 0.7886 - categorical_crossentropy: 0.5077 - val_loss: 0.8323 - val_acc: 0.6358 - val_categorical_crossentropy: 0.8323
Epoch 00015: early stopping
             precision    recall  f1-score   support

          0       0.61      0.53      0.57       147
          1       0.68      0.75      0.71       424
          2       0.57      0.50      0.53       250

avg / total       0.63      0.64      0.63       821

log-loss = 0.832
---------------------------------------------------------------------------------------
128x128 RGB image, CNN- 4Conv-1FC
10 epoch, 7388 batches per epoch, 32 batch size, data augmentation, 
Training was on data augmentation set and then for some time it was trained on only original set. Then back on the data augmentation  set.

        featurewise_center=False,  # set input mean to 0 over the dataset
        samplewise_center=False,  # set each sample mean to 0
        featurewise_std_normalization=False,  # divide inputs by std of the dataset
        samplewise_std_normalization=False,  # divide each input by its std
        zca_whitening=False,  # apply ZCA whitening
        rotation_range=180,  # randomly rotate images in the range (degrees, 0 to 180)
        width_shift_range=0.1,  # randomly shift images horizontally (fraction of total width)
        height_shift_range=0.1,  # randomly shift images vertically (fraction of total height)
        horizontal_flip=True,  # randomly flip images
        vertical_flip=True)  # randomly flip images

model check pointing = "weights.19-0.8033.hdf5"
optimiezer = Mix of AdaDelta, Adam, 
using additional images

Epoch 2/2
230/230 [==============================] - 43s - loss: 0.8249 - acc: 0.6011 - categorical_crossentropy: 0.8249 - val_loss: 0.7998 - val_acc: 0.6151 - val_categorical_crossentropy: 0.7998
             precision    recall  f1-score   support

          0       0.75      0.41      0.53       147
          1       0.62      0.77      0.69       424
          2       0.55      0.48      0.51       250

avg / total       0.62      0.62      0.61       821

log-loss = 0.800

---------------------------------------------------------------------------------------
128x128 RGB image, CNN- 4Conv-1FC (64(3,3)-64(5,5)-64(3,3)-64(5,5)-512)
1000 epoch, 7388 batches per epoch, 64 batch size, data augmentation, 
initial epoch = 500, final epoch=1500
Training was on data augmentation set and then for some time it was trained on only original set. Then back on the data augmentation  set.

        featurewise_center=False,  # set input mean to 0 over the dataset
        samplewise_center=False,  # set each sample mean to 0
        featurewise_std_normalization=False,  # divide inputs by std of the dataset
        samplewise_std_normalization=False,  # divide each input by its std
        zca_whitening=False,  # apply ZCA whitening
        rotation_range=180,  # randomly rotate images in the range (degrees, 0 to 180)
        width_shift_range=0.1,  # randomly shift images horizontally (fraction of total width)
        height_shift_range=0.1,  # randomly shift images vertically (fraction of total height)
        horizontal_flip=True,  # randomly flip images
        vertical_flip=True)  # randomly flip images

model check pointing = "128features\\weights.450-0.8648.hdf5"
optimizer = opt = keras.optimizers.Adadelta(lr=0.1, decay=1e-3), 
using additional images
114/115 [============================>.] - ETA: 0s - loss: 0.8261 - acc: 0.6121 - categorical_crossentropy: 0.8261Epoch 01499: saving model to C:\Users\t-anik\Desktop\personal\KaggleData\cer
er\keras_lenet5\weights.1499-0.8376.hdf5
115/115 [==============================] - 56s - loss: 0.8264 - acc: 0.6117 - categorical_crossentropy: 0.8264 - val_loss: 0.8376 - val_acc: 0.6005 - val_categorical_crossentropy: 0.8376
             precision    recall  f1-score   support

          0       0.61      0.38      0.47       147
          1       0.63      0.72      0.67       424
          2       0.54      0.52      0.53       250

avg / total       0.60      0.60      0.59       821

log-loss = 0.838
kaggle score = 0.84

======================================================================================
Same model trained for 1000 more epochs. Not much improvement
             precision    recall  f1-score   support

          0       0.63      0.41      0.50       147
          1       0.62      0.68      0.65       424
          2       0.52      0.52      0.52       250

avg / total       0.59      0.59      0.58       821

log-loss = 0.831
kaggle score = 0.84089

======================================================================================
RandomForests 1000. with histogram equalization. and grayscale images.

TUNE for this setting resulted in the following 
RandomizedSearchCV took 1282.90 seconds for 20 candidates parameter settings.
Model with rank: 1
Mean validation score: -0.836 (std: 0.001)
Parameters: {'bootstrap': False, 'min_samples_split': 8, 'max_depth': None, 'min_samples_leaf': 4, 'criterion': 'gini', 'max_features': 9}

Model with rank: 2
Mean validation score: -0.842 (std: 0.001)
Parameters: {'bootstrap': False, 'min_samples_split': 10, 'max_depth': None, 'min_samples_leaf': 1, 'criterion': 'gini', 'max_features': 4}

Model with rank: 3
Mean validation score: -0.862 (std: 0.001)
Parameters: {'bootstrap': False, 'min_samples_split': 3, 'max_depth': None, 'min_samples_leaf': 7, 'criterion': 'entropy', 'max_features': 5}

(59104, 16384)
             precision    recall  f1-score   support

          0       0.98      0.21      0.35      1189
          1       0.61      0.95      0.74      3486
          2       0.75      0.33      0.46      1893

avg / total       0.72      0.64      0.59      6568

log-loss = 0.805
[ 0.12030476  0.52390476  0.35579048]
kaggle score = 0.84881

======================================================================
No Histogram Equalization => RGB 128x128 image
Using Cervix Segmentation.
data augmentation with 
n_estimators = 1000, n_jobs = -1
bootstrap = False, class_weight = None, criterion = 'gini', max_depth = None
min_samples_split = 8, min_samples_leaf = 4, max_features = 9, num_per_variation=1
zx,zy = 1,2, rotation_rng = 30, sx, sy= 0.1, 0.1, shear_intensity = 0.5

(59119, 49152)
             precision    recall  f1-score   support

          0       0.96      0.34      0.51      1163
          1       0.66      0.98      0.79      3466
          2       0.90      0.47      0.62      1940

avg / total       0.79      0.72      0.69      6569

log-loss = 0.718

======================================================================
Histogram Equalization => Grayscale 128x128 image
Using Cervix Segmentation.
data augmentation with 
n_estimators = 1000, n_jobs = -1
bootstrap = False, class_weight = None, criterion = 'gini', max_depth = None
min_samples_split = 8, min_samples_leaf = 4, max_features = 9, num_per_variation=1
zx,zy = 1,2, rotation_rng = 30, sx, sy= 0.1, 0.1, shear_intensity = 0.5

(59119, 16384)
             precision    recall  f1-score   support

          0       0.99      0.19      0.32      1163
          1       0.59      1.00      0.74      3466
          2       0.95      0.24      0.38      1940

avg / total       0.77      0.63      0.56      6569

log-loss = 0.820
kaggle-score = 0.97893
will be saving to disk now.. not sure if it'll be done
[ 0.13788095  0.61171429  0.25040476]

======================================================================
Histogram Equalization => Grayscale 128x128 image
Using Cervix Segmentation.
data augmentation with 
n_estimators = 1000, n_jobs = -1
bootstrap = False, class_weight = None, criterion = 'gini', max_depth = None
min_samples_split = 2, min_samples_leaf = 1, max_features = 'auto', num_per_variation=1
zx,zy = 1,2, rotation_rng = 30, sx, sy= 0.1, 0.1, shear_intensity = 0.5

(59119, 16384)
             precision    recall  f1-score   support

          0       0.99      0.30      0.46      1163
          1       0.63      0.99      0.77      3466
          2       0.94      0.36      0.52      1940

avg / total       0.79      0.68      0.64      6569

log-loss = 0.759
kaggle-score = 0.97745 (Looks line i missed performing cervix segmentation on the test images)
[ 0.131  0.648  0.221]

======================================================================
Histogram Equalization => Grayscale 128x128 image
Using Cervix Segmentation.
no data augmentation
n_estimators = 1000, n_jobs = -1
bootstrap = False, class_weight = None, criterion = 'gini', max_depth = None
min_samples_split = 2, min_samples_leaf = 1, max_features = 'auto', num_per_variation=1
zx,zy = 1,2, rotation_rng = 30, sx, sy= 0.1, 0.1, shear_intensity = 0.5

(7388, 16384)
             precision    recall  f1-score   support

          0       1.00      0.32      0.48       147
          1       0.58      0.98      0.73       424
          2       0.80      0.19      0.31       250

avg / total       0.72      0.62      0.56       821

log-loss = 0.822
will be saving to disk now.. not sure if it'll be done
[ 0.157  0.59   0.253]
kaggle-score = 0.87344 (Looks line i missed performing cervix segmentation on the test images)